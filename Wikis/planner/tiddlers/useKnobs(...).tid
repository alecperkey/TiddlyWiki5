created: 20181212200644463
modified: 20181212200901901
tags: [[custom React-Hooks (examples)]]
title: useKnobs(...)
type: text/vnd.tiddlywiki

https://codesandbox.io/s/ymwz3krmm9

```
import React, { useState } from 'react'
import ReactDOM from 'react-dom'
import { useSpring, animated } from 'react-spring'
import './styles.css'

const calc = (x, y) => [-(y - window.innerHeight / 2) / 20, (x - window.innerWidth / 2) / 20, 1.1]
const trans = (x, y, s) => `perspective(600px) rotateX(${x}deg) rotateY(${y}deg) scale(${s})`

function Knob({ name, value, onChange, min = 1, max = 500 }) {
  return (
    <label>
      {name}: {value}
      <input
        type="range"
        min={min}
        max={max}
        value={value}
        onChange={e => onChange(Number(e.target.value))}
      />
    </label>
  )
}

function useKnobs(initialValues, options) {
  const [values, setValues] = useState(initialValues)
  return [
    values,
    <div
      style={{
        width: 150,
        zIndex: 999999,
        backgroundColor: 'rgba(255,255,255,0.8)',
        position: 'absolute',
      }}>
      {Object.keys(values).map(name => (
        <Knob
          {...options}
          key={name}
          name={name}
          value={values[name]}
          onChange={newValue =>
            setValues({
              ...values,
              [name]: newValue,
            })
          }
        />
      ))}
    </div>,
  ]
}

function Card() {
  const [config, knobs] = useKnobs({
    mass: 5,
    tension: 350,
    friction: 40,
  })
  const [props, set] = useSpring({ xys: [0, 0, 1], config })
  return (
    <>
      {knobs}
      <animated.div
        class="card"
        onMouseMove={({ clientX: x, clientY: y }) => set({ xys: calc(x, y) })}
        onMouseLeave={() => set({ xys: [0, 0, 1] })}
        style={{ transform: props.xys.interpolate(trans) }}
      />
    </>
  )
}

ReactDOM.render(<Card />, document.getElementById('root'))
```